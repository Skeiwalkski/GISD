Workfile <- Workfile %>%
# Entfernen bevölkerungsloser Gemeinden
filter(Bevoelkerung > 0) %>%
# Ersetzen fehlender Gemeindedaten durch Kreisdaten (1998-2000)
mutate(ErwerbsfaehigeBevoelkerung = ifelse(Jahr < 2001, ErwerbsfaehigeBevoelkerungKreis, ErwerbsfaehigeBevoelkerung),
Beschaeftigtenquote        = ifelse(Jahr < 2001, BeschaeftigtenquoteKreis, Beschaeftigtenquote),
Arbeitslosigkeit           = ifelse(Jahr < 2001, ArbeitslosigkeitKreis, Arbeitslosigkeit)) %>%
# Berechnen des Anteils Arbeitsloser an erwerbsfähiger Bevölkerung
mutate(Arbeitslosigkeit = Arbeitslosigkeit / ErwerbsfaehigeBevoelkerung * 1000) %>%
# Korrekturen aufgrund unsauberer Rohdaten
mutate(
# Arbeitslosenanteil aus Kreis beziehen wenn er über 100% liegt
Arbeitslosigkeit = ifelse(Arbeitslosigkeit >= 1, ArbeitslosigkeitKreis / ErwerbsfaehigeBevoelkerungKreis, Arbeitslosigkeit),
# Arbeitslosenanteil auf 0 setzen wenn erwerbsfähige Bevölkerung == 0
Arbeitslosigkeit = ifelse(ErwerbsfaehigeBevoelkerung == 0, 0, Arbeitslosigkeit),
# Beschäftigtenquote bei 80% deckeln
Beschaeftigtenquote = ifelse(Beschaeftigtenquote > 80, 80, Beschaeftigtenquote)) %>%
select(-BeschaeftigtenquoteKreis,
-ArbeitslosigkeitKreis,
-ErwerbsfaehigeBevoelkerungKreis,
-ErwerbsfaehigeBevoelkerung) %>% # Erwerbsfähige Bevölkerung nicht mehr benötigt
arrange(Gemeindekennziffer, Jahr) # Daten sortieren
# Erwerbsfähige Bevölkerung aus level_table löschen
level_table <- level_table[-4,]
# Ende Generierung Basisdatensatz
# # Ausschreiben eines Vorab-Workfiles zur Überprüfung der Arbeitslosenquote
# write_rds(Workfile, paste0(outfiles_dir,"Workfile_vorab.rds"))
# # Stata-Kopie für internes Verzeichnis
# write_dta(Workfile, paste0(check_dir,"workfile.dta"))
knitr::kable(level_table, col.names = c("Indikator", "Regionale Tiefe"), caption = "Liste der Indikatoren")
rm(level_table)
# Quelle VBP-Index: <https://www.destatis.de/DE/Themen/Wirtschaft/Preise/Verbraucherpreisindex/Publikationen/Downloads-Verbraucherpreise/verbraucherpreisindex-lange-reihen-pdf-5611103.html>
vbp <- data.frame(Jahr = seq(1998, latestyear),
VBindex = c( 78.3,  78.8,
79.9,  81.5,  82.6,  83.5,  84.9,
86.2,  87.6,  89.6,  91.9,  92.2,
93.2,  95.2,  97.1,  98.5,  99.5,
100,  100.5,  102,  103.8, 105.3,
105.8, 109.1))
# An VBP-Index anpassen und logarithmieren
Workfile <- Workfile %>%
left_join(vbp, by = "Jahr") %>%
mutate(Haushaltseinkommen = Haushaltseinkommen / VBindex * 100,
Bruttoverdienst    = Bruttoverdienst    / VBindex * 100,
Einkommensteuer    = Einkommensteuer    / VBindex * 100,
Bruttoverdienst_ln = log(Bruttoverdienst),
Haushaltseinkommen_ln = log(Haushaltseinkommen),
# log(x = 0) = NaN. Daher auf 0.75 setzen, so als wäre Einkommensteuer = 2.12
Einkommensteuer_ln = ifelse(Einkommensteuer == 0, 0.75, log(Einkommensteuer)),
# log(x < 0) = NaN. Daher auf 0.25 setzen, so als wäre Einkommensteuer = 1.28
Einkommensteuer_ln = ifelse(Einkommensteuer < 0, 0.25, Einkommensteuer_ln)) %>%
select(-VBindex)
rm(vbp)
## Adjustment der Schulabgänger-Indikatoren anhand von Reformeffekten
# Generierung der Variablen zur Identifikation der Reformen (G8/G9), Rückker zu G9 (SN_KA) und abweichender Anerkennung von Abschlüssen für GymnasiastInnen (THvor2004)
Workfile <- Workfile %>%
mutate(G8_jahr = case_when(Kreis < 2000 & Jahr == 2016 ~ 1,
Kreis > 1999 & Kreis < 3000 & Jahr == 2010 ~ 1,
Kreis > 2999 & Kreis < 4000 & Jahr == 2011 ~ 1,
Kreis > 3999 & Kreis < 5000 & Jahr == 2012 ~ 1,
Kreis > 4999 & Kreis < 6000 & Jahr == 2013 ~ 1,
Kreis > 5999 & Kreis < 7000 & Jahr == 2013 ~ 1,
Kreis > 7999 & Kreis < 9000 & Jahr == 2012 ~ 1,
Kreis > 8999 & Kreis < 10000 & Jahr == 2011 ~ 1,
Kreis > 9999 & Kreis < 11000 & Jahr == 2009 ~ 1,
Kreis > 10999 & Kreis < 12000 & Jahr == 2012 ~ 1,
Kreis > 11999 & Kreis < 13000 & Jahr == 2012 ~ 1,
Kreis > 12999 & Kreis < 14000 & Jahr == 2008 ~ 1,
Kreis > 14999 & Kreis < 16000 & Jahr == 2007 ~ 1,
TRUE ~ 0), # TRUE = alle anderen Fälle
G9_jahr =   case_when(Kreis > 7999 & Kreis < 9000 & Jahr == 2020 ~ 1,
TRUE ~ 0),
SN_KA =     case_when(Kreis > 14999 & Kreis < 16000 & Jahr == 2001 ~ 1,
TRUE ~ 0),
THvor2004 = case_when(Kreis > 15999 & Jahr < 2004 ~ 1,
TRUE ~ 0)
)
# Funktion zum Ersetzen der Werte in den von Verzerrungen betroffenen Fällen durch um Reformeffekte bereinigte Quoten
adj_g8 <- function(data, outcome_name) {
# Datensatz aufbereiten
regdata <- data %>%
group_by(Gemeindekennziffer) %>%
select(Gemeindekennziffer, Jahr,
G8_jahr, G9_jahr, SN_KA, THvor2004,
Outcome = paste(outcome_name)) %>%
mutate(MEAN = mean(Outcome, na.rm = TRUE)) %>%
ungroup()
# Regression durchführen
reg_g8 <- lm(Outcome ~
I(Jahr*Jahr*MEAN) + I(Jahr*MEAN) +
G8_jahr + G9_jahr + SN_KA + THvor2004,
data = regdata,
na.action = "na.exclude")
# # Werte prüfen
# print(reg_g8)
# Koeffizient des Effekts von Indikator abziehen (wenn von Reform betroffen)
regdata %>%
mutate(coef_G8 = coef(reg_g8)["G8_jahr"],
coef_G9 = coef(reg_g8)["G9_jahr"],
coef_SH = coef(reg_g8)["SN_KA"],
coef_TH = coef(reg_g8)["THvor2004"],
Outcome = ifelse(G8_jahr == 1,
Outcome - coef_G8,
Outcome),
Outcome = ifelse(G9_jahr == 1,
Outcome - coef_G9,
Outcome),
Outcome = ifelse(SN_KA == 1,
Outcome - coef_SH,
Outcome),
Outcome = ifelse(THvor2004 == 1,
Outcome - coef_TH,
Outcome)) %>%
pull(Outcome) # Bereinigten Wert ausgeben
}
# Adjustment auf Indikator anwenden
Workfile <- Workfile %>%
mutate(SchulabgaengerohneAbschluss_adj = adj_g8(.,"SchulabgaengerohneAbschluss"))
rm(adj_g8)
theme_set(theme_bw()) # Plot-Theme einstellen
# Check des Adjustments durch Histogramme
hist_ohneAbschluss <- ggplot(Workfile) +
geom_histogram(aes(x = SchulabgaengerohneAbschluss, y=..density..,
fill = as.factor(G8_jahr)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Kein G8-Jahr", "G8-Jahr"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.9, 0.5)) +
xlim(0, 22.5) + ylim(0, 0.25) +
xlab("Anteil der Schulabgänger ohne Abschluss (vor G8-Adjustment)")
hist_ohneAbschluss_adj <- ggplot(Workfile) +
geom_histogram(aes(x = SchulabgaengerohneAbschluss_adj, y=..density..,
fill = as.factor(G8_jahr)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Kein G8-Jahr", "G8-Jahr"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.9, 0.5)) +
xlim(0, 22.5) + ylim(0, 0.25) +
xlab("Anteil der Schulabgänger ohne Abschluss (nach G8-Adjustment)")
hist_ohneAbschluss
hist_ohneAbschluss_adj
rm(hist_ohneAbschluss, hist_ohneAbschluss_adj)
# Markieren der Kreise
Workfile <- Workfile %>% mutate(ow = ifelse(Kreis < 11000, 0, 1))
# Funktion zum Ersetzen der Werte in den betroffenen Fällen durch um Ost-West-Effekte bereinigte Werte
adj_ow <- function(data, outcome_name) {
# Datensatz aufbereiten
regdata <- data %>%
select(Gemeindekennziffer,
Jahr,
ow,
Outcome = all_of(outcome_name)) %>%
mutate(Jahr_Dummy = relevel(as.factor(Jahr), ref = "2012")) %>%
ungroup()
# Regression durchführen
reg_ow <- lm(Outcome ~
Jahr_Dummy + Jahr_Dummy*ow,
data = regdata,
na.action="na.exclude")
# # Werte prüfen
# print(reg_ow)
# Koeffizient des Effekts von Indikator abziehen (wenn Teil der neuen Länder)
regdata %>%
mutate(coef_ow = coef(reg_ow)["ow"],
Outcome = ifelse(ow == 1,
Outcome - coef_ow,
Outcome)) %>%
pull(Outcome) # Bereinigten Wert ausgeben
}
# Adjustment auf Indikator anwenden
Workfile <- Workfile %>%
mutate(BeschaeftigteohneAbschluss_adj = adj_ow(.,"BeschaeftigteohneAbschluss"))
rm(adj_ow)
# Check des Adjustments durch Histogramme
hist_ow <- ggplot(Workfile) +
geom_histogram(aes(x = BeschaeftigteohneAbschluss, y=..density..,
fill = as.factor(Kreis>=11000)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Alte Bundesländer", "Neue Bundesländer"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.85, 0.5)) +
xlim(0, 27.5) +
xlab("Anteil der Beschäftigten ohne Abschluss (vor Ost-West-Adjustment)")
hist_ow_adj <- ggplot(Workfile) +
geom_histogram(aes(x = BeschaeftigteohneAbschluss_adj, y=..density..,
fill = as.factor(Kreis>=11000)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Alte Bundesländer", "Neue Bundesländer"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.85, 0.5)) +
xlim(0, 27.5) +
xlab("Anteil der Beschäftigten ohne Abschluss (nach Ost-West-Adjustment)")
hist_ow
hist_ow_adj
rm(hist_ow, hist_ow_adj)
## Beschaeftigte ohne Abschluss
# Werte von 2013 auf 2012 übertragen und Messänderung markieren
Workfile <- Workfile %>%
group_by(Gemeindekennziffer) %>%
arrange(Jahr) %>%
mutate(
# Betroffene Jahre markieren (Alles vor 2012)
Messaenderung_Besch = ifelse(Jahr < 2012, 1, 0),
# Ohne Abschluss für 2012 von 2013 rüberkopieren
BeschaeftigteohneAbschluss_adj =
if_else(Jahr == 2012,
lead(BeschaeftigteohneAbschluss_adj, 1),
BeschaeftigteohneAbschluss_adj),
# Mit akad. Abschluss für 2012 von 2013 rüberkopieren
BeschaeftigtemitakadAbschluss =
if_else(Jahr == 2012,
lead(BeschaeftigtemitakadAbschluss, 1),
BeschaeftigtemitakadAbschluss)) %>%
ungroup() %>%
arrange(Gemeindekennziffer, Jahr)
# Datensatz kopieren für Plot nachher
Workfile_preAdj <- Workfile
# Funktion zum Ersetzen der Werte in den betroffenen Jahren durch um Messänderungs-Effekte bereinigte Werte
adj_messaenderung <- function(data, outcome_name) {
# Datensatz aufbereiten
regdata <- data %>%
select(Gemeindekennziffer,
Jahr,
Messaenderung_Besch,
"Outcome"=paste(outcome_name)) %>%
mutate(MEAN=mean(Outcome, na.rm=TRUE))
# Regression durchführen
reg_messaenderung <- lm(Outcome ~
I(Jahr*Jahr*MEAN) + I(Jahr*MEAN) + Messaenderung_Besch,
data = regdata,
na.action="na.exclude")
# # Werte prüfen
# print(reg_messaenderung)
# Koeffizient des Effekts von Indikator abziehen (für Beobachtungen vor 2012)
regdata %>%
mutate(coef_mb = coef(reg_messaenderung)["Messaenderung_Besch"],
Outcome = ifelse(Messaenderung_Besch == 1, # (entspricht Jahr < 2012)
Outcome - coef_mb,
Outcome)) %>%
pull(Outcome) # Bereinigten Wert ausgeben
}
# Adjustment auf Indikatoren anwenden
Workfile <- Workfile %>%
mutate(BeschaeftigteohneAbschluss_adj = adj_messaenderung(.,"BeschaeftigteohneAbschluss_adj"),
BeschaeftigtemitakadAbschluss_adj = adj_messaenderung(.,"BeschaeftigtemitakadAbschluss")) %>%
# Sämtliche Adjustment-Hilfsvariablen entfernen
select(-G8_jahr, -G9_jahr, -SN_KA, -THvor2004,
-ow, -Messaenderung_Besch)
rm(adj_messaenderung)
# Check des Adjustments durch Histogramme
hist_messanpassung_ohne <- ggplot(Workfile_preAdj) +
geom_histogram(aes(x = BeschaeftigteohneAbschluss_adj, y=..density..,
fill = as.factor(Jahr>2011)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Vor 2012", "Ab 2012"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.9, 0.5)) +
xlim(6, 27.5) + xlab("Anteil der Beschäftigten ohne Abschluss (vor Messänderungs-Adjustment)")
hist_messanpassung_ohne_adj <- ggplot(Workfile) +
geom_histogram(aes(x = BeschaeftigteohneAbschluss_adj, y=..density..,
fill = as.factor(Jahr>2011)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Vor 2012", "Ab 2012"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.9, 0.5)) +
xlim(6, 27.5) + xlab("Anteil der Beschäftigten ohne Abschluss (nach Messänderungs-Adjustment)")
hist_messanpassung_ohne
hist_messanpassung_ohne_adj
hist_messanpassung_akad <- ggplot(Workfile_preAdj) +
geom_histogram(aes(x = BeschaeftigtemitakadAbschluss, y=..density..,
fill = as.factor(Jahr>2011)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Vor 2012", "Ab 2012"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.9, 0.5)) +
xlim(0, 35) + xlab("Anteil der Beschäftigten mit akad. Abschluss (vor Messänderungs-Adjustment)")
hist_messanpassung_akad_adj <- ggplot(Workfile) +
geom_histogram(aes(x = BeschaeftigtemitakadAbschluss_adj, y=..density..,
fill = as.factor(Jahr>2011)),
alpha = 0.6, position = "identity",
bins = 30) +
scale_fill_manual(labels = c("Vor 2012", "Ab 2012"),
values = c("darkblue", "darkred")) +
guides(fill = guide_legend(title = "")) +
theme(legend.position = c(0.9, 0.5)) +
xlim(0, 35) + xlab("Anteil der Beschäftigten mit akad. Abschluss (nach Messänderungs-Adjustment)")
hist_messanpassung_akad
hist_messanpassung_akad_adj # Achtung: Anteil akademische Abschlüsse ist in Deutschland über Zeit gestiegen - dass die Werte hier mehr divergieren als vorher ist ein gutes Zeichen!
rm(hist_messanpassung_ohne, hist_messanpassung_ohne_adj,
hist_messanpassung_akad, hist_messanpassung_akad_adj,
Workfile_preAdj)
listofdeterminants <- c("Arbeitslosigkeit",
"Beschaeftigtenquote",
"Bruttoverdienst_ln",
"BeschaeftigtemitakadAbschluss_adj",
"BeschaeftigteohneAbschluss_adj",
"SchulabgaengerohneAbschluss_adj",
"Einkommensteuer_ln",
"Haushaltseinkommen_ln",
"Schuldnerquote")
# Funktion zum Imputieren anhand des Zeitreihenmittelwerts
reg_impute <- function(data, outcome_name) {
# Datensatz aufbereiten
regdata <- data %>%
# Nach Gemeinde gruppieren
group_by(Gemeindekennziffer) %>%
select(Gemeindekennziffer,
Jahr,
"Outcome"=paste(outcome_name)) %>%
# Zeitreihen-Mittelwert vermerken
mutate(MEAN=mean(Outcome, na.rm=TRUE)) %>%
ungroup()
# Regression durchführen
reg_imp <- lm(Outcome ~
I(Jahr*Jahr*MEAN) + I(Jahr*MEAN),
data = regdata,
na.action="na.exclude")
# Predicted Value einsetzen
regdata %>%
select(Outcome) %>%
mutate(
# Predicted Value des Modells notieren
Imputed = predict(reg_imp,
newdata = regdata),
# Missings mit predicted Value ersetzen
Outcome=ifelse(is.finite(Outcome),
Outcome, Imputed),
# Implausible (negative) Werte zurück auf 0 setzen
Outcome=ifelse(Outcome < 0,
0, Outcome)) %>%
pull(Outcome) # Errechneten Wert ausgeben
}
# Über sämtliche Indikatoren imputieren
Impdata <- Workfile %>%
mutate(Arbeitslosigkeit                 =reg_impute(.,"Arbeitslosigkeit"),
SchulabgaengerohneAbschluss      =reg_impute(.,"SchulabgaengerohneAbschluss"),
SchulabgaengerohneAbschluss_adj  =reg_impute(.,"SchulabgaengerohneAbschluss_adj"),
Beschaeftigtenquote              =reg_impute(.,"Beschaeftigtenquote"),
Bruttoverdienst                  =reg_impute(.,"Bruttoverdienst"),
Bruttoverdienst_ln               =reg_impute(.,"Bruttoverdienst_ln"),
BeschaeftigtemitakadAbschluss    =reg_impute(.,"BeschaeftigtemitakadAbschluss"),
BeschaeftigtemitakadAbschluss_adj=reg_impute(.,"BeschaeftigtemitakadAbschluss_adj"),
BeschaeftigteohneAbschluss       =reg_impute(.,"BeschaeftigteohneAbschluss"),
BeschaeftigteohneAbschluss_adj   =reg_impute(.,"BeschaeftigteohneAbschluss_adj"),
Einkommensteuer                  =reg_impute(.,"Einkommensteuer"),
Einkommensteuer_ln               =reg_impute(.,"Einkommensteuer_ln"),
Haushaltseinkommen               =reg_impute(.,"Haushaltseinkommen"),
Haushaltseinkommen_ln            =reg_impute(.,"Haushaltseinkommen_ln"),
Schuldnerquote                   =reg_impute(.,"Schuldnerquote"))
# Ergebnis der Imputation
cat("Übersicht über Indikatoren nach Imputation: \n\n")
summary(Impdata %>% select(all_of(listofdeterminants)))
# Vergleich der Anzahl NAs vor und nach Imputation
missings <- Workfile %>%
# Reshape auf long (Indikatoren zeilenweise)
pivot_longer(cols = 7:21,
names_to = "Indikator",
values_to = "value") %>%
# Missings aufsummieren
group_by(Indikator) %>%
summarise(PreImputation = sum(is.na(value))) %>%
# Selbiges für imputierten Datensatz und dann joinen
left_join(Impdata %>% pivot_longer(cols = 7:21,
names_to = "Indikator",
values_to = "value") %>%
# Missings aufsummieren
group_by(Indikator) %>%
summarise(PostImputation = sum(is.na(value))),
by = "Indikator")
print(missings)
rm(reg_impute, missings)
# # Ausschreiben des Datensatzes zur Überprüfung
# write_rds(Impdata, paste0(outfiles_dir,"Impdata_check.rds"))
#
# # Stata-Kopie für internes Verzeichnis
# stata_data <- Impdata %>%
#   # Stata-Variablen dürfen maximal 32 Zeichen lang sein
#   rename(BeschaeftigteohneAbschlussadj = BeschaeftigteohneAbschluss_adj,
#          BeschaeftigtemitakadAbschlussadj = BeschaeftigtemitakadAbschluss_adj)
#
# write_dta(stata_data, paste0(check_dir,"Impdata_check.dta"))
#
# rm(stata_data)
TS_Arbeitswelt <- Impdata %>%
filter(Jahr > 1999) %>%
select(Beschaeftigtenquote,
Arbeitslosigkeit,
Bruttoverdienst_ln)
TS_Einkommen <- Impdata %>%
filter(Jahr > 1999) %>%
select(Einkommensteuer_ln,
Haushaltseinkommen_ln,
Schuldnerquote)
TS_Bildung <- Impdata %>%
filter(Jahr > 1999) %>%
select(BeschaeftigtemitakadAbschluss_adj,
BeschaeftigteohneAbschluss_adj,
SchulabgaengerohneAbschluss_adj)
# PCA für die Arbeitsweltdimension
TS_Arbeitswelt.pca <- prcomp(TS_Arbeitswelt,
center = TRUE, scale. = TRUE, retx=TRUE)
plot(TS_Arbeitswelt.pca, main = "Eigenwerte für Dimension Arbeitswelt")
TS_Arbeitswelt.pca <- prcomp(TS_Arbeitswelt,
center = TRUE, scale. = TRUE, retx=TRUE,
rank. = 1)
TS_Arbeitswelt.pca
# PCA für die Einkommensdimension
TS_Einkommen.pca <- prcomp(TS_Einkommen,
center = TRUE, scale. = TRUE, retx=TRUE)
plot(TS_Einkommen.pca, main = "Eigenwerte für Dimension Einkommen")
TS_Einkommen.pca <- prcomp(TS_Einkommen,
center = TRUE, scale. = TRUE, retx=TRUE,
rank. = 1)
TS_Einkommen.pca
# PCA für die Bildungsdimension
TS_Bildung.pca <- prcomp(TS_Bildung,
center = TRUE, scale. = TRUE, retx=TRUE)
plot(TS_Bildung.pca, main = "Eigenwerte für Dimension Bildung")
TS_Bildung.pca <- prcomp(TS_Bildung,
center = TRUE, scale. = TRUE, retx=TRUE,
rank. =1 )
TS_Bildung.pca
Components_A <- data.frame(Variable=rownames(TS_Arbeitswelt.pca$rotation),
Dimension="Arbeitswelt",
Anteil=unname(TS_Arbeitswelt.pca$rotation^2),
Score=unname(TS_Arbeitswelt.pca$rotation * TS_Arbeitswelt.pca$sdev[1]))
Components_B <- data.frame(Variable=rownames(TS_Bildung.pca$rotation),
Dimension="Bildung",
Anteil=unname(TS_Bildung.pca$rotation^2),
Score=unname(TS_Bildung.pca$rotation * TS_Bildung.pca$sdev[1]))
Components_E <- data.frame(Variable=rownames(TS_Einkommen.pca$rotation),
Dimension="Einkommen",
Anteil=unname(TS_Einkommen.pca$rotation^2),
Score=unname(TS_Einkommen.pca$rotation * TS_Einkommen.pca$sdev[1]))
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1))
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1)) %>%
group_by(Dimension) %>%
summarize("Anteil am GISD" = sum(Proportion) / 3)
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1)) %>%
group_by(Dimension) %>%
summarize("Anteil am GISD" = sum(Proportion) / 3) %>%
ungroup() %>%
select(-Anteil)
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1))
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1)) %>%
group_by(Dimension) %>%
summarize("Anteil am GISD" = sum(Proportion) / 3) %>%
ungroup()
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1)) %>%
group_by(Dimension) %>%
mutate("Anteil am GISD" = sum(Proportion) / 3) %>%
ungroup() %>%
select(-Anteil)
View(GISD_Components)
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1)) %>%
group_by(Dimension) %>%
mutate("Anteil am GISD" = Proportion / 3) %>%
ungroup() %>%
select(Variable,
Dimension,
Proportion,
Score,
"Anteil am GISD")
View(GISD_Components)
GISD_Components <- rbind(Components_A,
Components_B,
Components_E) %>%
mutate(Proportion=round(Anteil*100, digits=1)) %>%
group_by(Dimension) %>%
mutate("Anteil am GISD" = round(Proportion/3, digits=1)) %>%
ungroup() %>%
select(Variable,
Dimension,
Proportion,
Score,
"Anteil am GISD")
View(GISD_Components)
